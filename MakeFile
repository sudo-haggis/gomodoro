# GoModoro Makefile

# Variables
BINARY_NAME=gomodoro
PACKAGE_NAME=com.pirate.gomodoro
FYNE_CMD=fyne

# Default target
.DEFAULT_GOAL := help

## help: Show this help message
help:
	@echo 'Usage:'
	@sed -n 's/^##//p' ${MAKEFILE_LIST} | column -t -s ':' | sed -e 's/^/ /'

## test: Run all tests
test:
	go test -v -cover ./...

## test-race: Run tests with race detector
test-race:
	go test -race -short ./...

## test-coverage: Run tests with coverage report
test-coverage:
	go test -coverprofile=coverage.out ./...
	go tool cover -html=coverage.out -o coverage.html
	@echo "Coverage report generated: coverage.html"

## build: Build the application
build:
	go build -o $(BINARY_NAME) .

## run: Build and run the application
run: build
	./$(BINARY_NAME)

## clean: Clean build artifacts
clean:
	go clean
	rm -f $(BINARY_NAME)
	rm -rf build/
	rm -f coverage.out coverage.html

## fmt: Format Go code
fmt:
	go fmt ./...

## vet: Run go vet
vet:
	go vet ./...

## lint: Run golangci-lint (requires installation)
lint:
	golangci-lint run

## install-tools: Install development tools
install-tools:
	go install fyne.io/fyne/v2/cmd/fyne@latest
	@echo "Installing golangci-lint..."
	curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $$(go env GOPATH)/bin

## deps: Download and verify dependencies
deps:
	go mod download
	go mod verify

## tidy: Clean up go.mod and go.sum
tidy:
	go mod tidy

## build-linux: Build for Linux
build-linux:
	GOOS=linux GOARCH=amd64 go build -o build/$(BINARY_NAME)-linux-amd64 .

## build-windows: Build for Windows
build-windows:
	GOOS=windows GOARCH=amd64 go build -o build/$(BINARY_NAME)-windows-amd64.exe .

## package-android: Package for Android (requires fyne command)
package-android:
	$(FYNE_CMD) package -os android -appID $(PACKAGE_NAME) -name GoModoro -release

## package-ios: Package for iOS (requires fyne command and macOS)
package-ios:
	$(FYNE_CMD) package -os ios -appID $(PACKAGE_NAME) -name GoModoro -release

## install-android: Install on connected Android device
install-android: package-android
	adb install -r GoModoro.apk

## watch: Run tests on file change (requires entr)
watch:
	find . -name '*.go' | entr -c go test ./...

## check: Run all checks (fmt, vet, test)
check: fmt vet test

.PHONY: help test test-race test-coverage build run clean fmt vet lint install-tools deps tidy build-linux build-windows package-android package-ios install-android watch check